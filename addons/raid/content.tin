#alias _sugerowanywrog_ {#echo {<118>Nie ma jeszcze wroga!<088>}};
#alias _sugerowanaobrona_ {#echo {<118>Nie ma nikogo do obrony!<088>}};

#alias {/kw} {#line ignore #showme {$raidbartable}} {1};

#alias {gildie} {
    #nop;
};

#nop USTAWIAMY TYPY PASKA ZALEZNIE OD SZEROKOSCI MAPY;
#alias {kondycje} {
    #var pkondycje $ConfigManager_Configs[kondycje];
    #switch {"$pkondycje"} {
        #case {"mini"}   {#alias {tabela_odswiez} {_tabela_odswiez_0_};#alias {render_h2} {_render_h2_0_}};
        #case {"medium"} {#alias {tabela_odswiez} {_tabela_odswiez_1_};#alias {render_h2} {_render_h2_1_}};
        #case {"polpelne"}  {#alias {tabela_odswiez} {_tabela_odswiez_3_};#alias {render_h2} {_render_h2_3_}};        
        #case {"pelne"}  {#alias {tabela_odswiez} {_tabela_odswiez_4_};#alias {render_h2} {_render_h2_4_}};
    };
}

#alias {zacheta} {
    #var pzacheta $ConfigManager_Configs[zacheta];

    #if {"$pzacheta" == "widoczna"} {
        _zacheta_pokaz_;
        #list event_handler_buffer_update add _zacheta_pokaz_;
    } {
        #list event_handler_buffer_update find _zacheta_pokaz_ _ehbuf;
        #if {$_ehbuf} {
            #list event_handler_buffer_update delete $_ehbuf;
        };
    };
}

#alias {_zacheta_pokaz_} {
    #if {"$ConfigManager_Configs[powtorzenter]" == "wlaczony"} {
        #var lastcmd $sendoutput;
        #format lastcmdLen {%L} {$lastcmd};
        #if {$lastcmdLen > 0} {
            #sh {$duch[$CHAR_INFO[object_num]][bar][orc] <138>> <088>} {$screenrows} {1};
        };
    } {
        #sh {$duch[$CHAR_INFO[object_num]][bar][orc] <128>> <088>} {$screenrows} {1};
    };
};



#alias {RaidTableGuildEnemies} {
    #local tmp {$ConfigManager_Configs[RaidTableGuildEnemies]};
    #replace tmp {,} {;};
    #list wrogowieDB create {$tmp};
    #foreach {*wrogowieDB[]} {wdb} {
        #var gildie[$wrogowieDB[$wdb]] {w}; 
    };
};

#alias {RaidTableGuildFriends} {
    #local tmp {$ConfigManager_Configs[RaidTableGuildFriends]};
    #replace tmp {,} {;};
    #list przyjacieleDB create {$tmp};
    #foreach {*przyjacieleDB[]} {pdb} {
        #var gildie[$przyjacieleDB[$pdb]] {p}; 
    };
};

#alias {RaidTableGuild} {
    #local tmp {$ConfigManager_Configs[RaidTableGuild]};
    #replace tmp {,} {;};
    #list guildDB create {$tmp};
    #foreach {*guildDB[]} {pdb} {
        #var gildie[$guildDB[$pdb]] {g}; 
    };
};




#alias {RaidTable_GMCP_Objects_Nums} {
	#var {obnu} {%0};
	#foreach {*duch[]} {bubu} {
		#list {obnu} find {$bubu} {vfob};
		#if {"$vfob" == "0"} {
			#unvar {duch[$bubu]};
            #unvar {duch[$bubu][bot]};
            #unvar {duch[$bubu][enemys]};
            #unvar {duch[$bubu][rownr]};
            #unvar {duch[$bubu][shown]};
         	}; 
    	};
    assign_type;
    szukaj_wroga;
    szukaj_team;
    tabela_odswiez;
    render_h2;
    #var objectnumsRefreshed {1};
}

#alias {RaidTable_GMCP_Objects_Data}
{
    #var {duch} {$duch} {%0};
    assign_type;
    szukaj_wroga;
    szukaj_team;
    tabela_odswiez;
    render_h2;
    #var objectnumsRefreshed {1};
}



#nop ###################################################################;
#nop dla kazdej postaci w tablicy przypozadkuj dany typ;
#alias {assign_type} {
    #list wrogi {clear};
    #var wrogi_index 0;
     #var neut_index 0;
    #list neut {clear};
        #var team_index 0;
    #list team {clear};

    #screen get rows screenrows;
    #var localcnt {1};

    #foreach {*duch[]} {dudu} {
       #var duch[$dudu][enemies] {0};
    };

    #foreach {*duch[]} {dudu} {

        #format {duchtrue} {%L} {$duch[$dudu][living]};
        #if {$duchtrue > 2} {

         	#var duch[$dudu][bot] {};
            #var duch[$dudu][shown] {0};
 
            #if {$duch[$dudu][attack_num] > 0} {
   	         #math duch[$duch[$dudu][attack_num]][enemies] {$duch[$duch[$dudu][attack_num]][enemies] + 1};
            };
 
            #if {"$duch[$dudu][avatar]" == "true"} {
                #var avatarid {$dudu};
                #var duch[$dudu][desc] {$AVATAR_NAME};
            } {

            #var test {$duch[$dudu][desc]};
            #replace test { } {_};
            #var test {${test}_};
#nop 16-03-2020;
            #if {"$postac[$test][gildia]" != ""} {
                #line {substitute} {variables} {
            #nop ENEMIES;
                    #if {"$gildie[$postac[$test][gildia]]" == "w"} {
                        #var duch[$dudu][typ] {wrog};
                        #var duch[$dudu][enemy] {true};
                    };
                };
                #if {"$postac[$test][gildia]" == "BOSS"} {
                    #var duch[$dudu][typ] {boss};
                };
            };
#nop 16-03-2020;

            #nop sprawdzamy czy to imie, jesli tak to znaczy ze to short;
            #nop w takim wypadku szukamy flagi cached na imieniu;
            #format {gncheck} {%L} {$postac[$test][imie]};
            #format {excheck} {%L} {$postac[$test][gildia]};
            #var tmpimie {};
            #var imietype {};
            #var tmpim {};
            #var confirmed {};
	        #var tmpimietype 0;
            #if {$gncheck > 1} {
                #var confirmed {$postac[$postac[$test][imie]][cached]};
                #var tmpim $postac[$test][imie];
                #var tmpimie {$gildie[$postac[$test][gildia]] $postac[$test][gildia] $postac[$test][imie] $duch[dudu][desc]};
		        #var tmpimietype 1;
            } {
                #var confirmed {$postac[$test][cached]};
                #var tmpim $test;
            
                #if {"$postac[$test][gildia]" != ""} {
                    #var tmpimie {$gildie[$postac[$test][gildia]] $postac[$test][gildia] $test};
                };
		        #var tmpimietype 2;
            };
            #if {"$confirmed" == "true"} {
                #nop;
            } {
                #if {$excheck > 0} {
                    #var postac[$tmpim][cached] {true};

                    #if {"$duch[$dudu][avatar]" == "true"} {
                        #nop;
                    } {
            			#if {"$tmpimietype" == "1"} {
            				#nop;
            				#format dudu2 {%n} {$duch[$dudu][desc]};
            				#line substitute variables {
                                #if {"$ConfigManager_Configs[gildie]" == "widoczne"} {
            #nop OPISY;             #sub {$duch[$dudu][desc]} {$duch[$dudu][desc] - $postac[$test][imie]($postac[$test][gildia])};
                                    #sub {$dudu2} {$dudu2 - $postac[$test][imie]($postac[$test][gildia])};
            #nop POKOLORUJ;         #high {$duch[$dudu][desc]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                                } {
             #nop OPISY;            #sub {$duch[$dudu][desc]} {$duch[$dudu][desc] ($postac[$test][imie])};
                                    #sub {$dudu2} {$dudu2 ($postac[$test][imie])};
            #nop POKOLORUJ;         #high {$duch[$dudu][desc]} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                                    #high {$postac[$test][imie]} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                                };
             #nop POKOLORUJ;    #high {$dudu2} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
            				};
            			};
            			#if {"$tmpimietype" == "2"} {
             #nop IMIE;                
            				#line substitute variables {
                                #if {"$ConfigManager_Configs[gildie]" == "widoczne"} {
             #nop WSTAW GILDIE;     #sub {$duch[$dudu][desc]} {$duch[$dudu][desc]($postac[$test][gildia])};
             #nop POKOLORUJ;        #high {$duch[$dudu][desc]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]}; 
                                } {
             #nop POKOLORUJ;        #high {$duch[$dudu][desc]} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};                         
                                };
            				};                          
            			};
                    };
                };
            };
            
    	    #var duch[$dudu][rownr] {$localcnt};
                #var rowmap[$rcnt] {$dudu};
                #math {localcnt} {$localcnt + 1};

    	    };

	
	        #if {"$duch[$dudu][enemy]" == "true"} {
	           #math wrogi_index {$wrogi_index + 1};
		       #list wrogi {insert} {$wrogi_index} {$dudu};
            };
	        #if {"$duch[$dudu][team]" == "false"} {
                #if {"$duch[$dudu][enemy]" == "false"} {
                	#math neut_index {$neut_index + 1};
                	#list neut {insert} {$neut_index} {$dudu};
                };
            };
            #if {"$duch[$dudu][team]" == "true"} {
                #math team_index {$team_index + 1};
                #list team {insert} {$team_index} {$dudu};
            };

        };


    }; #nop foreach duch;
};

#nop ###########################################;
#nop # FUNKCJE                                 #;
#nop ###########################################;
#function ShortToId {
    #format tmpShort {%l} {%0};
    #foreach {*duch[]} {tmpObjNum} {
        #format tmpDuch {%l} {$duch[$tmpObjNum][desc]};
        #if {"$tmpShort" == "$tmpDuch"} {
            #return {$tmpObjNum};
        };
    };
    #return 0;
};

#function GetEnemyTarget {
    #local myTmpId @ShortToId{%0};
    #return $duch[$myTmpId][attack_num];
};
#function IsIdTeam {
    #if {"$duch[%0][team]" == "true"} {
        #return 1;
    } {
        #return 0;
    };    
}
#function IsShortTeam {
    #local myTmpId @ShortToId{%0};
    #if {"$duch[$myTmpId][team]" == "true"} {
        #return 1;
    } {
        #return 0;
    };
};
#function StrLen {
    #format tmpStrLen {%L} {%0};
    #return $tmpStrLen;
};
#nop ###########################################;
#nop ###########################################;
#nop ###########################################;

#alias {szukaj_wroga}
{
    #nop ##############;
    #nop buduje liste wrogow;
    #nop ##############;
    #list wrogi size {wros};

    #var wrog_najslabszy 0;
    #var wrog_najslabszy_hp 10;
    #var wrog_najslabszy_cnt 0;
    #var wrog_sugerowany 0;

#nop szukamy wroga gildii, najlsbaszego;
    #foreach {*wrogi[]} {www} {
        #if {"$duch[$wrogi[$www]][typ]" == "wrog"} {
        #nop jesli obaj sa rownie ranni, bijemy tego ktory jest atakowany przez wiekszosc;
            #if {$duch[$wrogi[$www]][hp] == $wrog_najslabszy_hp} {
                #if {$duch[$wrogi[$www]][enemies] > $wrog_najslabszy_cnt} {
                    #var wrog_najslabszy $wrogi[$www];
                    #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                    #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
                };
            };
            #if {$duch[$wrogi[$www]][hp] < $wrog_najslabszy_hp} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
            };
        };
    };

#nop jesli nie znalezlismy najslabszego z wrogow gildii;
#nop szukamy najslabszego z wrogow;
    #if {$wrog_najslabszy_hp > 9} {
        #foreach {*wrogi[]} {www} {
            #nop jesli obaj sa rownie ranni, bijemy tego ktory jest atakowany przez wiekszosc;
            #if {$duch[$wrogi[$www]][hp] == $wrog_najslabszy_hp} {
                #if {$duch[$wrogi[$www]][enemies] > $wrog_najslabszy_cnt} {
                    #var wrog_najslabszy $wrogi[$www];
                    #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                    #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
                };
            };

            #if {$duch[$wrogi[$www]][hp] < $wrog_najslabszy_hp} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
                #var wrog_najslabszy_cnt $duch[$wrogi[$www]][enemies];                          
            };
        }
    };

#nop jesli nie jestesmy dowodca druzyny i jest ustawiony cel ataku;
#nop nadpisujemy wybor wroga;
    #if {"$duch[$avatarid][team_leader]" == "false"} {
        #foreach {*wrogi[]} {www} {
            #if {"$duch[$wrogi[$www]][attack_target]" == "true"} {
                #var wrog_najslabszy $wrogi[$www];
                #var wrog_najslabszy_hp $duch[$wrogi[$www]][hp];            
            };
        };
    };

#nop wrzucamy sugerowanego F1 do atrybutow;
    #if {$wrog_najslabszy_hp < 10} {
        #nop TO REDO;
        #var wrog_sugerowany $wrog_najslabszy;
        #var duch[$wrog_najslabszy][bot] {SA1};

	#line sub variables {#alias _sugerowanywrog_ {_zabij_ ob_$wrog_najslabszy}};
	#nop macro {$KEY_F1} {_zabij_ ob_$wrog_najslabszy};
	#nop macro {\e[11~} {_zabij_ ob_$wrog_najslabszy};

    };
}



#alias {szukaj_team}
{
    #list team size {teas};
    #var team_najslabszy 0;
    #var team_najslabszy_hp 10;
    #var team_najslabszy_cnt 0;
    #var team_sugerowany 0;
    #var team_celobrony 0;

    #foreach {*team[]} {www} {
        #if {$duch[$team[$www]][enemies] > 0} {
            #if {$duch[$team[$www]][hp] == $team_najslabszy_hp} {
                #if {$duch[$team[$www]][enemies] > $team_najslabszy_cnt} {
                    #var team_najslabszy $team[$www];
                    #var team_najslabszy_hp $duch[$team[$www]][hp];         
                    #var team_najslabszy_cnt $duch[$team[$www]][enemies];                           
                };
            };
            #elseif {$duch[$team[$www]][hp] < $team_najslabszy_hp} {
                #var team_najslabszy $team[$www];
                #var team_najslabszy_hp $duch[$team[$www]][hp];         
                #var team_najslabszy_cnt $duch[$team[$www]][enemies];                           
            };
        };
    };

    #if {$team_najslabszy_hp < 10} {
        #var duch[$team_najslabszy][bot] {SO1};
        #var team_sugerowany $team_najslabszy;
	
    	#line sub variables {
    		#alias _sugerowanaobrona_ {
    			_zaslon_ $team_najslabszy;
    		};
    	};
    };

    #nop jesli nie jestesmy dowodca druzyny i jest ustawiony cel obrony jako SO2;
    #if {"$duch[$avatarid][team_leader]" == "false"} {
        #foreach {*team[]} {www} {
            #if {"$duch[$team[$www]][defence_target]" == "true"} {
		        #var duch[$team[$www][bot] {SO2};
            };
        };
    };
}

#alias {tabela_odswiez} {
    _tabela_odswiez_4_
};



#alias {_tabela_odswiez_0_} {
    #local hpki[0] {<FAA><178>1/7<088>};
    #local hpki[1] {<faa>2/7<088>};
    #local hpki[2] {<fca>3/7<088>};
    #local hpki[3] {<ffa>4/7<088>};
    #local hpki[4] {<ffa>5/7<088>};
    #local hpki[5] {<afa>6/7<088>};
    #local hpki[6] {<afa>7/7<088>};
    #local tmpLead { };
    #var maxLinesPerType {};

    #list wrogi size {wros};
    #list neut size {neus};
    #list team size {teas};
    #var negativecounter 1;
    #screen get rows windowh;
    #var iterator {0};
    #foreach {*duch[]} {du} {      
        #if {"$duch[$du][hp]" != ""} {

            #math iterator {$iterator + 1};
            #math indexvalue {96 + $iterator};
            #if {$indexvalue > 122} {
                #var indexvalue {88};  
            };
            #format indexchar {%a} {$indexvalue};
            #var duch[$du][alias_value] {$indexchar};
         
            #line substitute {variables} {#alias k$indexchar {_zabij_ ob_$du}};
            #line substitute {variables} {#alias zp$indexchar {zaslon przed ob_$du}};
            #line substitute {variables} {#alias b$indexchar {zablokuj ob_$du}};
            #line substitute {variables} {#alias p$indexchar {przelam obrone ob_$du}};
            #line substitute {variables} {#alias z$indexchar {_zaslon_ $du}};
            #line substitute {variables} {#alias wz${indexchar} {gzwycofaj sie za ob_$du;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}2 {opcje grupa 2;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}3 {opcje grupa 3;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}4 {opcje grupa 4;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias O$indexchar {wskaz ob_$du jako cel obrony}};


            #var tmpen {  };
            #if {$duch[$du][enemies] < 1} {
                #var tmpen { };
            } {
                #var tmpen {$duch[$du][enemies]};
            };
            #if {$duch[$du][enemies] > 9} {
                #var tmpen {X};
            };

            #nop ROLE           BACKGROUND / FOREGRAND ;
            #nop TEAM MEMBER       none    /    blue   ;
            #nop TEAM LEADER       none    /   yellow  ;
            #nop TEAM DEFTAR     darkblue  /   white   ;
            #nop TEAM SUGGES       blue    /   white   ;

            #if {"$duch[$du][team]" == "true" } {
                #local colorFG {<148>};
                #local colorBG {};
                #local isTarget { };
                #local localHP {$healthbars3[$duch[$du][hp]]};

                #if {"$duch[$du][team_leader]" == "true"} {
                    #local isTarget {<ffa>^<088>};
                    #format team_lead_lower {%l} {$duch[$du][desc]};
                    #var team_lead_id {$du};
                };
                #if {"$duch[$du][defense_target]" == "true"} {
                    #local isTarget {<ABA><128>C<088>};
                };
                #if {"$duch[$du][bot]" == "SO1"} {
                    #local colorBG {<AAF>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][avatar]" == "true"} {
                    #local colorFG {<158>};
                };
            } {
                #local colorFG {<dda>};
                #local colorBG {};
                #local localHP {$healthbars3[$duch[$du][hp]]};
                #loca isTarget { };

                #if {"$duch[$du][enemy]" == "true"} {
                    #local colorFG {<fff>};
                    #local colorBG {<BAA>};
                };
                #if {"$duch[$du][typ]" == "wrog"} {
                    #local colorBG {<DAA>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][typ]" == "boss"} {
                    #local colorBG {<FCA>};
                    #local colorFG {<aaa>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][attack_target]" == "true"} {
                    #local isTarget {<BAA><118>C<088>};
                    #local colorBG {<BAC>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][bot]" == "SA1"} {
                    #local colorBG {<FAA>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
            };
            #if {"$duch[$du][avatar]" == "true"} {
                #local colorFG {<158>};
            };

            #regex {$duch[$du][desc]} {%w %w %w} {
                #format MyShort {%.3s} {&3};
            } {
                #format MyShort {%.3s} {$duch[$du][desc]};
            };

            #if {"$tmphp" != ""} {
                #var duch[$du][bar][orc] {<118>$tmpen<088> $duch[$du][alias_value] $hpki[$duch[$du][hp]]$isTarget${colorFG}${colorBG}$MyShort<088>};
                #nop var duch[$du][bar][orc] {$tmpsug $duch[$du][alias_value]$healthbars3[$duch[$du][hp]] $tmpen$tmpled$tmpkol$tmpna_orc<088>};
                #math {negativecounter} {$negativecounter + 1};
            };
        };
    };
};



#alias {_tabela_odswiez_1_} {
    #var maxLinesPerType {};
    #list wrogi size {wros};
    #list neut size {neus};
    #list team size {teas};
    #var negativecounter 1;
    #screen get rows windowh;
    #var iterator {0};
    #foreach {*duch[]} {du} {      
        #if {"$duch[$du][hp]" != ""} {

            #math iterator {$iterator + 1};
            #math indexvalue {96 + $iterator};
            #if {$indexvalue > 122} {
                #var indexvalue {88};  
            };
            
            #format indexchar {%a} {$indexvalue};
            #var duch[$du][alias_value] {$indexchar};
         
            #line substitute {variables} {#alias k$indexchar {_zabij_ ob_$du}};
            #line substitute {variables} {#alias zp$indexchar {zaslon przed ob_$du}};
            #line substitute {variables} {#alias b$indexchar {zablokuj ob_$du}};
            #line substitute {variables} {#alias p$indexchar {przelam obrone ob_$du}};
            #line substitute {variables} {#alias z$indexchar {_zaslon_ $du}};
            #line substitute {variables} {#alias wz${indexchar} {gzwycofaj sie za ob_$du;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}2 {opcje grupa 2;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}3 {opcje grupa 3;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}4 {opcje grupa 4;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias O$indexchar {wskaz ob_$du jako cel obrony}};


            #var tmpen {  };
            #if {$duch[$du][enemies] < 1} {
                #var tmpen { };
            } {
                #var tmpen {$duch[$du][enemies]};
            };
            #if {$duch[$du][enemies] > 9} {
                #var tmpen {X};
            };

            #nop ROLE           BACKGROUND / FOREGRAND ;
            #nop TEAM MEMBER       none    /    blue   ;
            #nop TEAM LEADER       none    /   yellow  ;
            #nop TEAM DEFTAR     darkblue  /   white   ;
            #nop TEAM SUGGES       blue    /   white   ;

            #if {"$duch[$du][team]" == "true" } {
                #local colorFG {<148>};
                #local colorBG {};
                #local localHP {$healthbars3[$duch[$du][hp]]};

                #if {"$duch[$du][defense_target]" == "true"} {
                    #local colorFG {<178>};
                    #local colorBG {<AAB>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][team_leader]" == "true"} {
                    #local colorFG {<138>};
                    #format team_lead_lower {%l} {$duch[$du][desc]};
                    #var team_lead_id {$du};
                };
                #if {"$duch[$du][bot]" == "SO1"} {
                    #local colorBG {<AAF>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][avatar]" == "true"} {
                    #local colorFG {<158>};
                };
            } {
                #local colorFG {<dda>};
                #local colorBG {};
                #local localHP {$healthbars3[$duch[$du][hp]]};

                #if {"$duch[$du][enemy]" == "true"} {
                    #local colorFG {<fac>};
                };
                #if {"$duch[$du][typ]" == "wrog"} {
                    #local colorBG {<DAA>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][typ]" == "boss"} {
                    #local colorBG {<FCA>};
                    #local colorFG {<aaa>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][attack_target]" == "true"} {
                    #local colorBG {<BAC>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
                #if {"$duch[$du][bot]" == "SA1"} {
                    #local colorBG {<FAA>};
                    #local colorFG {<fff>};
                    #local localHP {$healthbarsp[$duch[$du][hp]]}; 
                };
            };
            #if {"$duch[$du][avatar]" == "true"} {
                #local colorFG {<158>};
            };

            #format {MyShort} {%r} {$duch[$du][desc]};
            #format {MyShort} {%.7s} {$MyShort};
            #format {MyShort} {%r} {$MyShort};
            #format {MyShort} {%-7s} {$MyShort};


            #if {"$tmphp" != ""} {
                #var duch[$du][bar][orc] {<118>$tmpen<088> $duch[$du][alias_value] ${colorFG}${colorBG}$localHP${colorFG}${colorBG} $MyShort<088>};

                #nop var duch[$du][bar][orc] {$tmpsug $duch[$du][alias_value]$healthbars3[$duch[$du][hp]] $tmpen$tmpled$tmpkol$tmpna_orc<088>};
                #math {negativecounter} {$negativecounter + 1};
            };
        };
    };
};


#alias {_tabela_odswiez_3_} {
    #var maxLinesPerType {};
    #list wrogi size {wros};
    #list neut size {neus};
    #list team size {teas};
    #var negativecounter 1;
    #screen get rows windowh;
    #var iterator {0};
    #foreach {*duch[]} {du} {      
        #if {"$duch[$du][hp]" != ""} {

            #math iterator {$iterator + 1};
            #math indexvalue {96 + $iterator};
            #if {$indexvalue > 122} {
                #var indexvalue {88};  
            };
            #format indexchar {%a} {$indexvalue};
            #var duch[$du][alias_value] {$indexchar};
         
            #line substitute {variables} {#alias k$indexchar {_zabij_ ob_$du}};
            #line substitute {variables} {#alias zp$indexchar {zaslon przed ob_$du}};
            #line substitute {variables} {#alias b$indexchar {zablokuj ob_$du}};
            #line substitute {variables} {#alias p$indexchar {przelam obrone ob_$du}};
            #line substitute {variables} {#alias z$indexchar {_zaslon_ $du}};
            #line substitute {variables} {#alias wz${indexchar} {gzwycofaj sie za ob_$du;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}2 {opcje grupa 2;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}3 {opcje grupa 3;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}4 {opcje grupa 4;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias O$indexchar {wskaz ob_$du jako cel obrony}};

            #var tmphp $healthbars2[$duch[$du][hp]];
            #math tmphp2 {$duch[$du][hp] + 1};
            #var tmpcel {   };
            #var tmpava {  };
            #var tmpsug {  };
            #var tmpkol {<088>};
            #var tmpled { };
            #var tmptar {};

            #var tmpen {  };
            #if {$duch[$du][enemies] < 1} {
                #var tmpen {  };
            };
            #else {
                #format tmpen {%+2s} {<118>$duch[$du][enemies]<088>};
                #var tmpen {$tmpen};
            };

            #if {"$duch[$du][enemy]" == "true"} {#var tmpkol {<caf>}};
            #if {"$duch[$du][team]" == "true"} {#var tmpkol {<acf>}};

            #if {"$duch[$du][attack_target]" == "true"} {#var tmpcel {CEL};#var tmpkol {<faa>}};
            #if {"$duch[$du][defense_target]" == "true"} {#var tmpcel {COB};#var tmpkol {<AAB><178>}};
            #if {"$duch[$du][avatar_target]" == "true"} {#var tmpava {<FAA>  <088>}};

            #if {"$duch[$du][typ]" == "wrog"} {#var tmpkol {<G01><118>}};
            #if {"$duch[$du][typ]" == "boss"} {#var tmpkol {<CAF><178>}};


            #if {"$duch[$du][team_leader]" == "true"} {
              #var tmpled {<138>^<088>};
              #format team_lead_lower {%l} {$duch[$du][desc]};
              #var team_lead_id {$du};
            };
            
            #if {"$duch[$du][team]" == "true"} {
                #format tmpna_orc {%-12s} {$duch[$du][desc]};
                #format tmpna_orc {%.12s} {$tmpna_orc};
            } {
                #format {tmpna_orc} {%r} {$duch[$du][desc]};
                #format {tmpna_orc} {%.12s} {$tmpna_orc};
                #format {tmpna_orc} {%r} {$tmpna_orc};
                #format {tmpna_orc} {%-12s} {$tmpna_orc};
            };
            #if {"$duch[$du][avatar]" == "true"} {#var tmpna_orc {<158>$tmpna_orc<088>};};

            #if {"$duch[$du][bot]" == "SA1"} {#var tmpsug {<FAA><178>F1<088>}};
            #if {"$duch[$du][bot]" == "SA2"} {#var tmpsug {A2}};
            #if {"$duch[$du][bot]" == "SO1"} {#var tmpsug {O1}};
            #if {"$duch[$du][bot]" == "SO2"} {#var tmpsug {O2}};

            #if {"$duch[$du][bot]" == "SO1"} {
                #if {"$duch[$du][avatar]" == "true"} {
                    #var tmpsug {<FAA><178>!!<088>};
                    #nop    var tmpsug {<FAA><178>!!<088>};
                } {
                    #var tmpsug {<AAF><178>F2<088>};                
                };
            };

            #if {"$duch[$duch[$du][attack_num]][attack_target]" == "true"} {
                #var tmptarcolor {<128>};
            } {
                #var tmptarcolor {<118>};
            };

            #if {$duch[$du][attack_num] > 0} {
                #format tmptar {%-10s} {$duch[$duch[$du][attack_num]][desc]};
                #format tmptar {%.10s} {$tmptar};
                #var tmptar {|$attacktargethp| $tmptarcolor$tmptar<088>};
            };
            #if {"$tmphp" != ""} {
                #nop var duch[$du][bar][orc] {$duch[$du][alias_value] $tmpsug<088>$tmpava$tmpen [$tmphp]$tmpled$tmpkol$tmpna_orc<088> };
                #var duch[$du][bar][orc] {$tmpsug [$healthbars2[$duch[$du][hp]]] $duch[$du][alias_value]<088> $tmpen$tmpled$tmpkol$tmpna_orc<088>};
                #math {negativecounter} {$negativecounter + 1};
            };
        };
    };
};


#alias {_tabela_odswiez_4_} {
    #var maxLinesPerType {};
    #list wrogi size {wros};
    #list neut size {neus};
    #list team size {teas};
    #var negativecounter 1;
    #screen get rows windowh;
    #var iterator {0};
    #foreach {*duch[]} {du} {      
        #if {"$duch[$du][hp]" != ""} {

            #math iterator {$iterator + 1};
            #math indexvalue {96 + $iterator};
            #if {$indexvalue > 122} {
                #var indexvalue {88};  
            };
            #format indexchar {%a} {$indexvalue};
            #var duch[$du][alias_value] {$indexchar};
         
            #line substitute {variables} {#alias k$indexchar {_zabij_ ob_$du}};
            #line substitute {variables} {#alias zp$indexchar {zaslon przed ob_$du}};
            #line substitute {variables} {#alias b$indexchar {zablokuj ob_$du}};
            #line substitute {variables} {#alias p$indexchar {przelam obrone ob_$du}};
            #line substitute {variables} {#alias z$indexchar {_zaslon_ $du}};
            #line substitute {variables} {#alias wz${indexchar} {gzwycofaj sie za ob_$du;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}2 {opcje grupa 2;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}3 {opcje grupa 3;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias z${indexchar}4 {opcje grupa 4;zaslon ob_$du;opcje grupa 1;#if {"$pzdjeciezaslon" == "auto"} {przestan zaslaniac;}};};
            #line substitute {variables} {#alias O$indexchar {wskaz ob_$du jako cel obrony}};

            #var tmphp $healthbars2[$duch[$du][hp]];
            #math tmphp2 {$duch[$du][hp] + 1};
            #var tmpcel {   };
            #var tmpava {  };
            #var tmpsug {  };
            #var tmpkol {<088>};
            #var tmpled { };
            #var tmptar {};

            #var tmpen {  };
            #if {$duch[$du][enemies] < 1} {
                #var tmpen {  };
            };
            #else {
                #format tmpen {%+2s} {<118>$duch[$du][enemies]<088>};
                #var tmpen {$tmpen};
            };

            #if {"$duch[$du][enemy]" == "true"} {#var tmpkol {<caf>}};
            #if {"$duch[$du][team]" == "true"} {#var tmpkol {<acf>}};

            #if {"$duch[$du][attack_target]" == "true"} {#var tmpcel {CEL};#var tmpkol {<faa>}};
            #if {"$duch[$du][defense_target]" == "true"} {#var tmpcel {COB};#var tmpkol {<AAB><178>}};
            #if {"$duch[$du][avatar_target]" == "true"} {#var tmpava {<FAA>  <088>}};

            #if {"$duch[$du][typ]" == "wrog"} {#var tmpkol {<G01><118>}};
            #if {"$duch[$du][typ]" == "boss"} {#var tmpkol {<CAF><178>}};


            #if {"$duch[$du][team_leader]" == "true"} {
    		  #var tmpled {<138>^<088>};
    		  #format team_lead_lower {%l} {$duch[$du][desc]};
              #var team_lead_id {$du};
    	    };
            
            #if {"$duch[$du][team]" == "true"} {
                #format tmpna_orc {%-10s} {$duch[$du][desc]};
                #format tmpna_orc {%.10s} {$tmpna_orc};
            } {
                #var tmpna_orc {$duch[$du][desc]};
            };
            #if {"$duch[$du][avatar]" == "true"} {#var tmpna_orc {<158>$tmpna_orc<088>};};

            #if {"$duch[$du][bot]" == "SA1"} {#var tmpsug {<FAA><178>F1<088>}};
            #if {"$duch[$du][bot]" == "SA2"} {#var tmpsug {A2}};
            #if {"$duch[$du][bot]" == "SO1"} {#var tmpsug {O1}};
            #if {"$duch[$du][bot]" == "SO2"} {#var tmpsug {O2}};

            #if {"$duch[$du][bot]" == "SO1"} {
                #if {"$duch[$du][avatar]" == "true"} {
                    #var tmpsug {<FAA><178>!!<088>};
                    #nop    var tmpsug {<FAA><178>!!<088>};
                } {
                    #var tmpsug {<AAF><178>F2<088>};                
                };
            };

            #if {"$duch[$duch[$du][attack_num]][attack_target]" == "true"} {
                #var tmptarcolor {<128>};
            } {
                #var tmptarcolor {<118>};
            };

            #if {$duch[$du][attack_num] > 0} {
                #format tmptar {%-10s} {$duch[$duch[$du][attack_num]][desc]};
                #format tmptar {%.10s} {$tmptar};
                #var tmptar {|$attacktargethp| $tmptarcolor$tmptar<088>};
            };
            #if {"$tmphp" != ""} {
                #nop var duch[$du][bar][orc] {$duch[$du][alias_value] $tmpsug<088>$tmpava$tmpen [$tmphp]$tmpled$tmpkol$tmpna_orc<088> };
                #var duch[$du][bar][orc] {$tmpsug [$healthbars2[$duch[$du][hp]]] $duch[$du][alias_value]<088> $tmpen$tmpled$tmpkol$tmpna_orc<088>};
                #math {negativecounter} {$negativecounter + 1};
            };
        };
    };
};

#nop 1 hp;
#nop 2 kolorbg;
#nop 3 kolorfg;
#nop 4 short/imie;
#function kondycjaMini {
    #var myshort %4;
    #regex {%4} {%w %w %w} {
        #var myshort &3;
    };
    #regex {%4} {%w %w %w %w} {
        #var myshort &4;
    };
    
    #return 1;
};

#action {Zapamietane przez ciebie imiona to %* i %2.} {
	#list przedstawieni clear;
	#var str_przedstawieni {%1};
	#replace str_przedstawieni {{, | i }} {;};
	#list przedstawieni create {$str_przedstawieni};

	#foreach {*przedstawieni[]} {przedstawiony} {

			#var test {$przedstawieni[$przedstawiony]};
			#var test {${test}_};

			#format {excheck} {%L} {$postac[$test][gildia]};

			#if {$excheck > 1} {
                #if {"$ConfigManager_Configs[gildie]" == "widoczne"} {
                    #line substitute variables {
        				#sub {$przedstawieni[$przedstawiony]} {$przedstawieni[$przedstawiony]($postac[$test][gildia])};
    			        #high {$przedstawieni[$przedstawiony]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                    };
                } {
                    #line substitute variables {
                        #high {$przedstawieni[$przedstawiony]} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                    };
                };
			};
	};
};


#action {Osoby, ktore zostaly ci ostatnio przedstawione, to %1 i %2.} {
	#list przedstawieni clear;
	#var str_przedstawieni {%1};
	#replace str_przedstawieni {{, | i }} {;};
	#list przedstawieni create {$str_przedstawieni};

	#foreach {*przedstawieni[]} {przedstawiony} {

			#var test {$przedstawieni[$przedstawiony]};
			#var test {${test}_};

			#format {excheck} {%L} {$postac[$test][gildia]};

			#if {$excheck > 1} {
                #if {"$ConfigManager_Configs[gildie]" == "widoczne"} {
    				#line substitute variables {
        				#sub {$przedstawieni[$przedstawiony]} {$przedstawieni[$przedstawiony]($postac[$test][gildia])};
				        #high {$przedstawieni[$przedstawiony]($postac[$test][gildia])} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
				    };
                } {
                    #line substitute variables {
                        #high {$przedstawieni[$przedstawiony]} {$c_char_h_mode[$gildie[$postac[$test][gildia]]]};
                    };
                };
			};
	};
};


#alias {render_h2} {_render_h2_4_}


#alias {_render_h2_0_} {
    #var raidbartable {};
    #var a {%0};
    #math tmplinecnt {0 - $global_bundle_slots_values[prompt][bottom]};
    #nop loop {-6} {$tmplinecnt} {bubu} {#sh {                                                                                                       } {$bubu}};
    #var r_curLineCnt {-6};
    #var expectedlines 0;
    #list team_offenders cle;
    #list team_offenders cre;

    #foreach {*duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {
        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
            #var raidbartable {$raidbartable\n$duch[$avatarid][bar][orc]<088>};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$avatarid][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    }   {
            #foreach {*team[]} {ti} {
                #if {$duch[$team[$ti]][shown] < 1} {
                    #if {$duch[$team[$ti]][attack_num] > 0} {
                        #list team_offenders add $duch[$team[$ti]][attack_num];
                    }   {
                        #var raidbartable {$raidbartable\n$duch[$team[$ti]][bar][orc]<088>};

                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team[$ti]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                };
            };
        };
#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {*team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {*duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {
                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski} ><088> $duch[$duch[$ti][attack_num]][bar][orc]<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team_offenders[$to]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    }   {
                        #math RaidBarCountUsedLines {$RaidBarCountUsedLines + 1};            
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski}<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };
#nop RESZTA WALCZACYCH WROGOW;
    #foreach {*wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
            #var raidbartable {$raidbartable\n              $duch[$wrogi[$to]][bar][orc]<088>};
            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wrogi[$to]][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };
#nop WROGOWIE niewalczacy;
    #foreach {*wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #nop;
            } {
                #var raidbartable {$raidbartable\n              $duch[$wrogi[$wr]][bar][orc]<088>};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wrogi[$wr]][shown] {1};
                #math {expectedlines} {$expectedlines + 1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {*duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
            #var raidbartable {$raidbartable\n              $duch[$wr][bar][orc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wr][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };

    #regex {$raidbartable} {\\n%*} {
            #var raidbartable {&1};
    };

    #math screencols2 {$screencols / 2 };
    #nop draw violet tubed box $tmplinecnt-1 1 $screenrows-4 $screencols2 <088>$raidbartable;

    #list duch size lds;
};


#alias {_render_h2_1_} {
    #var raidbartable {};
    #var a {%0};
    #math tmplinecnt {0 - $global_bundle_slots_values[prompt][bottom]};
    #nop loop {-6} {$tmplinecnt} {bubu} {#sh {                                                                                                       } {$bubu}};
    #var r_curLineCnt {-6};
    #var expectedlines 0;
    #list team_offenders cle;
    #list team_offenders cre;

    #foreach {*duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {
        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
            #var raidbartable {$raidbartable\n$duch[$avatarid][bar][orc]<088>};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$avatarid][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    }   {
            #foreach {*team[]} {ti} {
                #if {$duch[$team[$ti]][shown] < 1} {
                    #if {$duch[$team[$ti]][attack_num] > 0} {
                        #list team_offenders add $duch[$team[$ti]][attack_num];
                    }   {
                        #var raidbartable {$raidbartable\n$duch[$team[$ti]][bar][orc]<088>};

                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team[$ti]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                };
            };
        };
#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {*team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {*duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {
                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski}  ><088> $duch[$duch[$ti][attack_num]][bar][orc]<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team_offenders[$to]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    }   {
                        #math RaidBarCountUsedLines {$RaidBarCountUsedLines + 1};            
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski}-'<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };
#nop RESZTA WALCZACYCH WROGOW;
    #foreach {*wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
            #var raidbartable {$raidbartable\n                       $duch[$wrogi[$to]][bar][orc]<088>};
            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wrogi[$to]][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };
#nop WROGOWIE niewalczacy;
    #foreach {*wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #nop;
            } {
                #var raidbartable {$raidbartable\n                       $duch[$wrogi[$wr]][bar][orc]<088>};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wrogi[$wr]][shown] {1};
                #math {expectedlines} {$expectedlines + 1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {*duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
            #var raidbartable {$raidbartable\n                       $duch[$wr][bar][orc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wr][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };

    #regex {$raidbartable} {\\n%*} {
            #var raidbartable {&1};
    };

    #math screencols2 {$screencols / 2 };
    #nop draw violet tubed box $tmplinecnt-1 1 $screenrows-4 $screencols2 <088>$raidbartable;

    #list duch size lds;
};


#alias {_render_h2_4_} {
    #var raidbartable {};
    #var a {%0};
    #math tmplinecnt {0 - $global_bundle_slots_values[prompt][bottom]};
    #nop loop {-6} {$tmplinecnt} {bubu} {#sh {                                                                                                       } {$bubu}};
    #var r_curLineCnt {-6};
    #var expectedlines 0;
    #list team_offenders cle;
    #list team_offenders cre;

    #foreach {*duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {
        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
            #var raidbartable {$raidbartable\n $duch[$avatarid][bar][orc]<088>};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$avatarid][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    }   {
            #foreach {*team[]} {ti} {
                #if {$duch[$team[$ti]][shown] < 1} {
                    #if {$duch[$team[$ti]][attack_num] > 0} {
                        #list team_offenders add $duch[$team[$ti]][attack_num];
                    }   {
                        #var raidbartable {$raidbartable\n $duch[$team[$ti]][bar][orc]<088>};

                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team[$ti]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                };
            };
        };
#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {*team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {*duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {
                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                        #var raidbartable {$raidbartable\n $duch[$ti][bar][orc]${c_stan_niski}  ><088> $duch[$duch[$ti][attack_num]][bar][orc]<088> <faa>><088> $duch[$duch[$duch[$ti][attack_num]][attack_num]][desc]};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team_offenders[$to]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    }   {
                        #math RaidBarCountUsedLines {$RaidBarCountUsedLines + 1};            
                        #var raidbartable {$raidbartable\n $duch[$ti][bar][orc]${c_stan_niski}-'<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };
#nop RESZTA WALCZACYCH WROGOW;
    #foreach {*wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
            #var raidbartable {$raidbartable\n $duch[$wrogi[$to]][bar][orc]<088> <118>><088> $duch[$duch[$wrogi[$to]][attack_num]][desc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wrogi[$to]][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };
#nop WROGOWIE niewalczacy;
    #foreach {*wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #nop;
            } {
                #var raidbartable {$raidbartable\n $duch[$wrogi[$wr]][bar][orc]<088>};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wrogi[$wr]][shown] {1};
                #math {expectedlines} {$expectedlines + 1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {*duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
            #var raidbartable {$raidbartable\n $duch[$wr][bar][orc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wr][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };

    #regex {$raidbartable} {\\n%*} {
            #var raidbartable {&1};
    };

    #math screencols2 {$screencols / 2 };
    #nop draw violet tubed box $tmplinecnt-1 1 $screenrows-4 $screencols2 <088>$raidbartable;

    #list duch size lds;
};


#alias {_render_h2_3_} {
    #var raidbartable {};
    #var a {%0};
    #math tmplinecnt {0 - $global_bundle_slots_values[prompt][bottom]};
    #nop loop {-6} {$tmplinecnt} {bubu} {#sh {                                                                                                       } {$bubu}};
    #var r_curLineCnt {-6};
    #var expectedlines 0;
    #list team_offenders cle;
    #list team_offenders cre;

    #foreach {*duch[]} {du} {#var duch[$du][shown] {0}};
    #list team siz ts;

    #if {$ts < 1} {
        #if {$duch[$avatarid][attack_num] > 0} {
            #list team_offenders add {$duch[$avatarid][attack_num]};
        } {
            #var raidbartable {$raidbartable\n$duch[$avatarid][bar][orc]<088>};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$avatarid][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    }   {
            #foreach {*team[]} {ti} {
                #if {$duch[$team[$ti]][shown] < 1} {
                    #if {$duch[$team[$ti]][attack_num] > 0} {
                        #list team_offenders add $duch[$team[$ti]][attack_num];
                    }   {
                        #var raidbartable {$raidbartable\n$duch[$team[$ti]][bar][orc]<088>};

                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team[$ti]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                };
            };
        };
#nop PRZECIWNICY DRUZYNY LUB AVATARA;
    #foreach {*team_offenders[]} {to} {
        #var tmpnavigator {1};
        #foreach {*duch[]} {ti} {
            #if {$duch[$ti][shown] < 1} {
                #if {"$duch[$ti][attack_num]" == "$team_offenders[$to]"} {
                    #if {$tmpnavigator == 1} {
                        #var tmpnavigator 0;
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski} ><088> $duch[$duch[$ti][attack_num]][bar][orc]<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #var duch[$team_offenders[$to]][shown] {1};
                        #math {expectedlines} {$expectedlines + 1};
                    }   {
                        #math RaidBarCountUsedLines {$RaidBarCountUsedLines + 1};            
                        #var raidbartable {$raidbartable\n$duch[$ti][bar][orc]${c_stan_niski}-'<088>};
                        #math r_curLineCnt {$r_curLineCnt - 1};
                        #math {expectedlines} {$expectedlines + 1};
                    };
                    #var duch[$ti][shown] {1};
                };
            };
        };  
    };
#nop RESZTA WALCZACYCH WROGOW;
    #foreach {*wrogi[]} {to} {
        #if {$duch[$wrogi[$to]][shown] < 1} {
            #var raidbartable {$raidbartable\n$duch[$wrogi[$to]][bar][orc]<088> <118>><088> $duch[$duch[$wrogi[$to]][attack_num]][desc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wrogi[$to]][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };
#nop WROGOWIE niewalczacy;
    #foreach {*wrogi[]} {wr} {
        #if {$duch[$wrogi[$wr]][shown] < 1} {
            #if {$duch[$wrogi[$wr]][attack_num] > 0} {
                #nop;
            } {
                #var raidbartable {$raidbartable\n$duch[$wrogi[$wr]][bar][orc]<088>};
                #math r_curLineCnt {$r_curLineCnt - 1};
                #var duch[$wrogi[$wr]][shown] {1};
                #math {expectedlines} {$expectedlines + 1};
            };
        };
    };
#nop RESZTA wszystkiego gdzie shown == 0;
    #foreach {*duch[]} {wr} {
        #if {$duch[$wr][shown] < 1} {
            #var raidbartable {$raidbartable\n$duch[$wr][bar][orc]};

            #math r_curLineCnt {$r_curLineCnt - 1};
            #var duch[$wr][shown] {1};
            #math {expectedlines} {$expectedlines + 1};
        };
    };

    #regex {$raidbartable} {\\n%*} {
            #var raidbartable {&1};
    };

    #math screencols2 {$screencols / 2 };
    #nop draw violet tubed box $tmplinecnt-1 1 $screenrows-4 $screencols2 <088>$raidbartable;

    #list duch size lds;
};
